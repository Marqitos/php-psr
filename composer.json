{
    "name": "rodas/psr-scaffold",
    "description": "PSR and FIG packages, with scaffolding autoload",
    "type": "library",
    "keywords": ["psr",
        "psr-3", "log",
        "psr-7", "http", "http-message", "request", "response",
        "psr-18", "http-client",
        "psr-20", "time", "clock", "now"],
    "license": "MIT",
    "authors": [
        {
            "name": "Marcos Porto MariÃ±o",
            "email": "php@marcospor.to"
        }
    ],
    "minimum-stability": "stable",
    "require": {
        "php": ">=8.0.0",
        "fig/http-message-util": "^1.1",
        "psr/clock": "^1.0",
        "psr/http-client": "^1.0",
        "psr/http-message": "^2.0",
        "psr/log": "^3.0"
    },
    "require-dev": {
        "php-parallel-lint/php-console-highlighter": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.4",
        "phpstan/phpstan": "^2.1",
        "phpunit/phpunit": "^12.4",
        "slevomat/coding-standard": "^8.24",
        "squizlabs/php_codesniffer": "^4.0"
    },
    "autoload": {
        "psr-4": {
            "Psr\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Psr\\Tests\\": "tests/"
        }
    },    
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    },    
    "scripts": {
        "dev:analyze": "@dev:analyze:phpstan",
        "dev:analyze:phpstan": "phpstan analyse --ansi --memory-limit 1G --configuration phpstan.neon",
        "dev:build:clean": "git clean -fX build/",
        "dev:lint": [
            "@dev:lint:syntax",
            "@dev:lint:style"
        ],        
        "dev:lint:fix": "phpcbf --cache=build/cache/phpcs.cache",
        "dev:lint:style": "phpcs --cache=build/cache/phpcs.cache --colors",
        "dev:lint:syntax": "parallel-lint --colors src/",
        "dev:test": [
            "@dev:lint",
            "@dev:analyze",
            "@dev:test:unit"
        ],
        "dev:test:coverage:ci": "@php -d 'xdebug.mode=coverage' vendor/bin/phpunit --colors=always --coverage-text --coverage-clover build/coverage/clover.xml --coverage-cobertura build/coverage/cobertura.xml --coverage-crap4j build/coverage/crap4j.xml --coverage-xml build/coverage/coverage-xml --log-junit build/junit.xml",
        "dev:test:coverage:html": "@php -d 'xdebug.mode=coverage' vendor/bin/phpunit --colors=always --coverage-html build/coverage/coverage-html/",
        "dev:test:unit": "phpunit --colors=always",
        "test": "@dev:test"
    },
    "scripts-descriptions": {
        "dev:analyze": "Runs all static analysis checks.",
        "dev:analyze:phpstan": "Runs the PHPStan static analyzer.",
        "dev:build:clean": "Cleans the build/ directory.",
        "dev:lint": "Runs all linting checks.",
        "dev:lint:fix": "Auto-fixes coding standards issues, if possible.",
        "dev:lint:style": "Checks for coding standards issues.",
        "dev:lint:syntax": "Checks for syntax errors.",
        "dev:test": "Runs linting and static analysis.",
        "dev:test:coverage:ci": "Runs unit tests and generates CI coverage reports.",
        "dev:test:coverage:html": "Runs unit tests and generates HTML coverage report.",
        "dev:test:unit": "Runs unit tests.",
        "test": "Runs linting and static analysis."
    }
}
